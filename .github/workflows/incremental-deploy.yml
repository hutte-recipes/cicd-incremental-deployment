# Based on https://github.com/mehdisfdc/sfdx-GitHub-actions/blob/main/.github/workflows/main.yml
name: Incremental deployment

on:
  workflow_dispatch:
    inputs:
      validateOnly:
        description: "Perform a validation deployment only"
      baseRef:
        description: "Git base ref"
        required: true
      targetRef:
        description: "Git target ref"
        required: true
  workflow_call:
    inputs:
      validateOnly:
        description: "Perform a validation deployment only"
        type: boolean
      baseRef:
        description: "Git base ref"
        type: string
        required: true
      targetRef:
        description: "Git target ref"
        type: string
        required: true

jobs:
  default:
    runs-on: ubuntu-latest
    container:
      image: salesforce/salesforcedx:latest-slim
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate delta
        run: |
          echo y | sfdx plugins:install sfdx-git-delta
          if [ "${{ inputs.validateOnly }}" = "true" ]; then
            git merge "${{ inputs.baseRef }}"
          fi
          mkdir -p deltas
          sfdx sgd:source:delta --from "${{ inputs.baseRef }}" --to "${{ inputs.targetRef }}" --output deltas --generate-delta --ignore .forceignore
          echo "# package.xml"
          cat deltas/package/package.xml; echo ""
          echo "# destructiveChanges.xml"
          cat deltas/destructiveChanges/destructiveChanges.xml; echo ""
      - name: Deploy changes to target org
        run: |
          sfdx org login sfdx-url --set-default --sfdx-url-file <(echo "${{ secrets.SFDX_AUTH_URL_TARGET_ORG }}")
          deployFlags=(
            --manifest deltas/package/package.xml
            --postdestructivechanges deltas/destructiveChanges/destructiveChanges.xml
            --wait 30
            --testlevel RunLocalTests
            --verbose
          )
          if [ "${{ inputs.validateOnly }}" = "true" ]; then
            deployFlags+=( --checkonly )
          fi
          sfdx force:source:deploy "${deployFlags[@]}"
